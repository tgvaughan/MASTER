/*
 * Copyright (C) 2014 Tim Vaughan <tgvaughan@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package master.gui;

import beast.base.parser.XMLParser;
import master.*;
import master.model.Model;
import master.model.PopulationType;
import master.outputs.JsonOutput;
import master.outputs.NewickOutput;
import master.outputs.NexusOutput;
import master.steppers.GillespieStepper;
import master.steppers.SALStepper;
import master.steppers.TauLeapingStepper;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.File;

/**
 *
 * @author Tim Vaughan <tgvaughan@gmail.com>
 */
public class MasterFrame extends javax.swing.JFrame {

    /**
     * View controller.
     */
    MasterApp controller;
    
    /**
     * Creates new form MasterFrame
     * 
     * @param controller
     */
    public MasterFrame(MasterApp controller) {
        this.controller = controller;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePopulations = new javax.swing.JTable();
        jButtonAddPop = new javax.swing.JButton();
        jButtonDelPop = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonAddReact = new javax.swing.JButton();
        jButton2DelReact = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableReactions = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jComboBoxSimulationType = new javax.swing.JComboBox();
        jLabelTrajectoryCount = new javax.swing.JLabel();
        jSpinnerTrajectoryCount = new javax.swing.JSpinner();
        jLabelStepper = new javax.swing.JLabel();
        jComboBoxStepper = new javax.swing.JComboBox();
        jCheckBoxSimPeriod = new javax.swing.JCheckBox();
        jTextFieldSimPeriod = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jCheckBox5 = new javax.swing.JCheckBox();
        jTextField5 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jCheckBoxJsonOutput = new javax.swing.JCheckBox();
        jTextFieldJsonOutput = new javax.swing.JTextField();
        jCheckBoxNewickOutput = new javax.swing.JCheckBox();
        jCheckBoxNexusOutput = new javax.swing.JCheckBox();
        jTextFieldNewickOutput = new javax.swing.JTextField();
        jTextFieldNexusOutput = new javax.swing.JTextField();
        jButtonRun = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemFileNew = new javax.swing.JMenuItem();
        jMenuItemFileOpen = new javax.swing.JMenuItem();
        jMenuItemFileSave = new javax.swing.JMenuItem();
        jMenuItemFileSaveAs = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemFileExit = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemHelpAbout = new javax.swing.JMenuItem();

        jDialog1.setModal(true);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/master/gui/icon.png"))); // NOI18N

        jLabel4.setText("MASTER: A stochastic simulator for phylodynamics.");

        jButton4.setText("Ok");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialog1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4))
                            .addGroup(jDialog1Layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Populations"));

        jTablePopulations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Dimension"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTablePopulations);

        jButtonAddPop.setText("+");
        jButtonAddPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPopActionPerformed(evt);
            }
        });

        jButtonDelPop.setText("-");
        jButtonDelPop.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 142, Short.MAX_VALUE)
                .addComponent(jButtonAddPop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelPop))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDelPop)
                    .addComponent(jButtonAddPop)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Reactions"));

        jButtonAddReact.setText("-");
        jButtonAddReact.setEnabled(false);

        jButton2DelReact.setText("+");

        jTableReactions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "String", "Rate", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableReactions);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2DelReact)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddReact))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddReact)
                    .addComponent(jButton2DelReact)))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Model", jPanel5);

        jComboBoxSimulationType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trajectory", "Ensemble", "EnsembleSummary", "InheritanceTrajectory", "InheritanceEnsemble" }));
        jComboBoxSimulationType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSimulationTypeActionPerformed(evt);
            }
        });

        jLabelTrajectoryCount.setText("Trajectory count:");
        jLabelTrajectoryCount.setEnabled(false);

        jSpinnerTrajectoryCount.setEnabled(false);
        jSpinnerTrajectoryCount.setRequestFocusEnabled(false);

        jLabelStepper.setText("Stepper:");

        jComboBoxStepper.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gillespie", "Tau Leaping", "SAL" }));

        jCheckBoxSimPeriod.setSelected(true);
        jCheckBoxSimPeriod.setText("Max sim period:");

        jTextFieldSimPeriod.setText("20");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("End Conditions"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 283, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 115, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Initial State"));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Population", "Size", "Lineage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable3);

        jButton1.setText("-");

        jButton2.setText("+");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Moments"));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jCheckBox5.setText("Fix Seed:");

        jTextField5.setText("1234");
        jTextField5.setEnabled(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jCheckBox5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField5))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabelTrajectoryCount)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSpinnerTrajectoryCount))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabelStepper)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBoxStepper, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jCheckBoxSimPeriod)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldSimPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBoxSimulationType, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxSimulationType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTrajectoryCount)
                    .addComponent(jSpinnerTrajectoryCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStepper)
                    .addComponent(jComboBoxStepper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxSimPeriod)
                    .addComponent(jTextFieldSimPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Simulation", jPanel6);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Outputs"));

        jCheckBoxJsonOutput.setSelected(true);
        jCheckBoxJsonOutput.setText("Pop sizes/moments");
        jCheckBoxJsonOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxJsonOutputActionPerformed(evt);
            }
        });

        jTextFieldJsonOutput.setText("output.json");
        jTextFieldJsonOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldJsonOutputActionPerformed(evt);
            }
        });

        jCheckBoxNewickOutput.setText("Tree/graph (Newick)");

        jCheckBoxNexusOutput.setText("Tree/graph (NEXUS)");

        jTextFieldNewickOutput.setText("output.newick");
        jTextFieldNewickOutput.setEnabled(false);

        jTextFieldNexusOutput.setText("output.nexus");
        jTextFieldNexusOutput.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxJsonOutput)
                    .addComponent(jCheckBoxNewickOutput)
                    .addComponent(jCheckBoxNexusOutput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNexusOutput)
                    .addComponent(jTextFieldJsonOutput, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldNewickOutput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxJsonOutput)
                    .addComponent(jTextFieldJsonOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxNewickOutput)
                    .addComponent(jTextFieldNewickOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxNexusOutput)
                    .addComponent(jTextFieldNexusOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButtonRun.setText("Run Simulation");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(jButtonRun)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Execution", jPanel8);

        jMenuFile.setMnemonic('f');
        jMenuFile.setText("File");

        jMenuItemFileNew.setMnemonic('n');
        jMenuItemFileNew.setText("New");
        jMenuItemFileNew.setToolTipText("");
        jMenuFile.add(jMenuItemFileNew);

        jMenuItemFileOpen.setMnemonic('o');
        jMenuItemFileOpen.setText("Open");
        jMenuItemFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFileOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemFileOpen);

        jMenuItemFileSave.setMnemonic('s');
        jMenuItemFileSave.setText("Save");
        jMenuFile.add(jMenuItemFileSave);

        jMenuItemFileSaveAs.setMnemonic('a');
        jMenuItemFileSaveAs.setText("Save as...");
        jMenuFile.add(jMenuItemFileSaveAs);
        jMenuFile.add(jSeparator1);

        jMenuItemFileExit.setMnemonic('x');
        jMenuItemFileExit.setText("Exit");
        jMenuItemFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFileExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemFileExit);

        jMenuBar.add(jMenuFile);

        jMenuHelp.setMnemonic('h');
        jMenuHelp.setText("Help");

        jMenuItemHelpAbout.setMnemonic('a');
        jMenuItemHelpAbout.setText("About...");
        jMenuItemHelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemHelpAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemHelpAbout);

        jMenuBar.add(jMenuHelp);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxSimulationTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSimulationTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSimulationTypeActionPerformed

    private void jButtonAddPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddPopActionPerformed

    private void jTextFieldJsonOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldJsonOutputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldJsonOutputActionPerformed

    private void jCheckBoxJsonOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxJsonOutputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxJsonOutputActionPerformed

    private void jMenuItemFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFileExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItemFileExitActionPerformed

    private void jMenuItemFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFileOpenActionPerformed
        
        JFileChooser fc = new JFileChooser();

        fc.setFileFilter(new javax.swing.filechooser.FileFilter() {

            private String getExtension(File f) {
                String ext = null;
                
                String fullName = f.getName();
                int i = fullName.lastIndexOf(".");
                if (i>0 && i<fullName.length()-1)
                    ext = fullName.substring(i+1).toLowerCase();
                
                return ext;
            }
            
            @Override
            public boolean accept(File f) {
                if (f.isDirectory())
                    return true;
                
                return "xml".equals(getExtension(f));
            }

            @Override
            public String getDescription() {
                return "MASTER XML files";
            }
        });

        
        if (fc.showOpenDialog(this) != JFileChooser.APPROVE_OPTION)
            return;
        
        File file = fc.getSelectedFile();
        
        // Load file
        try {
            controller.setRunnable(new XMLParser().parseFile(file));
            controller.updateView();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,
                    "Error loading '" + file.getName()
                            + "': " + ex.getLocalizedMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemFileOpenActionPerformed

    private void jMenuItemHelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemHelpAboutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane,
                "MASTER: Stochastic simulator for Phylodynamics",
                "About",
                JOptionPane.INFORMATION_MESSAGE,
                new ImageIcon(getClass().getResource("/master/gui/icon.png")));
    }//GEN-LAST:event_jMenuItemHelpAboutActionPerformed

    public void updateModelTab(Model model) {
        
        if (model == null)
            return;
        
        DefaultTableModel populationTable = (DefaultTableModel)jTablePopulations.getModel();
        DefaultTableModel reactionTable = (DefaultTableModel)jTableReactions.getModel();
        
        // Set populations

        populationTable.setRowCount(0);
        for (PopulationType popType : model.getPopulationTypes()) {
            String dimString;
            if (popType.getDims().length>0) {
                StringBuilder sb = new StringBuilder();
                for (int i=0; i<popType.getDims().length; i++) {
                    if (i>0)
                        sb.append(",");
                    sb.append(popType.getDims()[i]);
                }
                dimString = sb.toString();
            } else
                dimString = "scalar";
            
            populationTable.addRow(new Object [] {popType.getName(), dimString});
        }
        
        // Set reactions

//        reactionTable.setRowCount(0);
//        for (Reaction reaction : model.getReactions()) {
//            reactionTable.addRow(new Object [] {
//                reaction.reactionStringInput.get().trim(), reaction.getRate(), reaction.getName()});
//        }

    }
    
    public void updateExecutionTab(beast.base.inference.Runnable runnable,
            JsonOutput jsonOutput,
            NewickOutput newickOutput,
            NexusOutput nexusOutput) {


        
        if (jsonOutput == null) {
            jCheckBoxJsonOutput.setSelected(false);
            jTextFieldJsonOutput.setText("");
        } else {
            jCheckBoxJsonOutput.setSelected(true);
            jTextFieldJsonOutput.setText(jsonOutput.fileNameInput.get());
        }
        
                
        if (runnable instanceof InheritanceTrajectory
                || runnable instanceof InheritanceEnsemble) {

            if (newickOutput == null) {
                jCheckBoxNewickOutput.setSelected(false);
                jTextFieldNewickOutput.setText("");
            } else {
                jCheckBoxNewickOutput.setSelected(true);
                jTextFieldNewickOutput.setText(newickOutput.fileNameInput.get());
            }
            jCheckBoxNewickOutput.setEnabled(true);
            jTextFieldNewickOutput.setEnabled(true);
            
            if (nexusOutput == null) {
                jCheckBoxNexusOutput.setSelected(false);
                jTextFieldNexusOutput.setText("");
            } else {
                jCheckBoxNexusOutput.setSelected(true);
                jTextFieldNexusOutput.setText(nexusOutput.fileNameInput.get());
            }
            jCheckBoxNexusOutput.setEnabled(true);
            jTextFieldNexusOutput.setEnabled(true);
        } else {
            jCheckBoxNewickOutput.setEnabled(false);
            jCheckBoxNexusOutput.setEnabled(false);
            jTextFieldNewickOutput.setEnabled(false);
            jTextFieldNexusOutput.setEnabled(false);
            jTextFieldNewickOutput.setText("");
            jTextFieldNexusOutput.setText("");

        }
    }
    
    public void updateSimulationTab(TrajectorySpec spec) {
        
        // Sim type and trajectory count
        if (spec instanceof TrajectorySpec) {
            jComboBoxSimulationType.setSelectedIndex(0);
            jLabelTrajectoryCount.setEnabled(false);
            jSpinnerTrajectoryCount.setEnabled(false);
        }
        if (spec instanceof EnsembleSpec) {
            EnsembleSpec thisspec = (EnsembleSpec)spec;
            jComboBoxSimulationType.setSelectedIndex(1);
            jLabelTrajectoryCount.setEnabled(true);
            jSpinnerTrajectoryCount.setEnabled(true);
            jSpinnerTrajectoryCount.setValue(thisspec.getnTraj());
        }
        if (spec instanceof EnsembleSummarySpec) {
            EnsembleSummarySpec thisspec = (EnsembleSummarySpec)spec;
            jComboBoxSimulationType.setSelectedIndex(2);
            jLabelTrajectoryCount.setEnabled(true);
            jSpinnerTrajectoryCount.setEnabled(true);
            jSpinnerTrajectoryCount.setValue(thisspec.getnTraj());
        }
        if (spec instanceof InheritanceTrajectorySpec) {
            jComboBoxSimulationType.setSelectedIndex(3);
            jLabelTrajectoryCount.setEnabled(false);
            jSpinnerTrajectoryCount.setEnabled(false);
        }
        if (spec instanceof InheritanceEnsembleSpec) {
            InheritanceEnsembleSpec thisspec = (InheritanceEnsembleSpec)spec;
            jComboBoxSimulationType.setSelectedIndex(4);
            jLabelTrajectoryCount.setEnabled(true);
            jSpinnerTrajectoryCount.setEnabled(true);
            jSpinnerTrajectoryCount.setValue(thisspec.getnTraj());
        }

        // Stepper
        if (spec instanceof InheritanceTrajectorySpec
                || spec instanceof InheritanceEnsembleSpec) {
            jLabelStepper.setEnabled(false);
            jComboBoxStepper.setSelectedIndex(-1);
            jComboBoxStepper.setEnabled(false);
        } else {
            jLabelStepper.setEnabled(true);
            jComboBoxStepper.setEnabled(true);
            
            if (spec.getStepper() instanceof GillespieStepper)
                jComboBoxStepper.setSelectedIndex(0);
            
            if (spec.getStepper() instanceof TauLeapingStepper)
                jComboBoxStepper.setSelectedIndex(1);
            
            if (spec.getStepper() instanceof SALStepper)
                jComboBoxStepper.setSelectedIndex(2);
        }
        
        // Simulation time
        if (spec.getSimulationTime()>0.0) {
            jCheckBoxSimPeriod.setSelected(true);
            jTextFieldSimPeriod.setText(String.valueOf(spec.getSimulationTime()));
        } else {
            jCheckBoxSimPeriod.setSelected(true);
            jTextFieldSimPeriod.setText("");
        }
    }
    
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton2DelReact;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonAddPop;
    private javax.swing.JButton jButtonAddReact;
    private javax.swing.JButton jButtonDelPop;
    private javax.swing.JButton jButtonRun;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBoxJsonOutput;
    private javax.swing.JCheckBox jCheckBoxNewickOutput;
    private javax.swing.JCheckBox jCheckBoxNexusOutput;
    private javax.swing.JCheckBox jCheckBoxSimPeriod;
    private javax.swing.JComboBox jComboBoxSimulationType;
    private javax.swing.JComboBox jComboBoxStepper;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelStepper;
    private javax.swing.JLabel jLabelTrajectoryCount;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemFileExit;
    private javax.swing.JMenuItem jMenuItemFileNew;
    private javax.swing.JMenuItem jMenuItemFileOpen;
    private javax.swing.JMenuItem jMenuItemFileSave;
    private javax.swing.JMenuItem jMenuItemFileSaveAs;
    private javax.swing.JMenuItem jMenuItemHelpAbout;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSpinner jSpinnerTrajectoryCount;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTablePopulations;
    private javax.swing.JTable jTableReactions;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextFieldJsonOutput;
    private javax.swing.JTextField jTextFieldNewickOutput;
    private javax.swing.JTextField jTextFieldNexusOutput;
    private javax.swing.JTextField jTextFieldSimPeriod;
    // End of variables declaration//GEN-END:variables
}
